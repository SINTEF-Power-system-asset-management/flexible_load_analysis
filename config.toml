# Configuration-file for stochastic load analysis.
# Change values to achieve the desired functionality.
# Non-empty strings equate to boolean True, empty strings equate to False.

name = "Stochastic Load Modelling"

[data]

    # The following fields relate to input path of data, how the timestamps are
    # formatted and the date of the first datapoint.
    
    # Timestamp-format is described by the C standard (1989 version). 
    # See i.e. https://docs.python.org/3.6/library/datetime.html#strftime-and-strptime-behavior
    # Example usage: data has timestamp "September 2. 2020", then the 
    # C representation would be "%B %d. %Y"
    # The date-format may be given as a list if formats are used.
    
    # The first date of the data must be in iso format.

    # Additional fields are required based on the filetype the loaded data is on:
    # .xlsx / .xls
    # sheet = int               --      Zero-indexed sheet the data is stored on
    # time_column = int         --      Zero-indexed column the timestamps occupies
    # data_column = int         --      Zero-indexed column the data occupies
    # vertical_data = string    --      Insert empty string if data is horizontal 
    #                                   (it occupies rows instead of columns), instert "True" if data is vertical
    #
    # .txt
    # separator                 --      ASCII-character which separates each column of data
    # time_column = int         --      Zero-indexed column the timestamps occupies
    # data_column = int         --      Zero-indexed column the data occupies

    [data.load_measurements]
    path = "load_data\\CINELDI_ORA_DATA.txt"
    date_format = ["%d/%m/%Y", "%d/%m/%Y %H:%M:%S"]
    first_date_iso = "2019-03-01"

    # For txt-files:
    separator = ";"
    time_column = 2
    data_column = 3
    vertical_data = "True"


    [data.temperature_measurements]
    path = "temperature_data\\Temperatur_Strømtangen_fyr_2000-01_06_2021.xlsx"
    date_format = "%d.%m.%Y"
    first_date_iso = "2000-01-01"

    # For excel-files:
    sheet = 0
    time_column = 2
    data_column = 3
    vertical_data = "True"


[preprocessing]

# Any non-empty string will indicate the chosen preprocessing step is performed
remove_NaN_and_None = "True"
correct_for_temperature = "True"
k_temperature_coefficient = 0.1
x_temperature_sensitivity = 0.05


[modelling]

chosen_model = "toenne"

    [modelling.toenne]
    max_or_average_variation_calculation = "average"
    # As presented in Tønne, A: monthly and by workday/weekend, multiplicative, B: workday/weekend monthly
    variation_values_alternative = "B"
    # As presented in WP1_pilot_Stokastisk_lastmodellering
    histogram_periods = 1
    # Chosen way of generatic stochastic model, either from "error_histogram" or "distribution_fitting"
    stochastic_source = "error_histogram"

    # For additional models, add additional fields for parameters and choice-variables here.
    #[modelling.example]
    #parameter1 = 3.14
    #parameter2 = "Hello World"


[plotting]

# Global plot-parameters
font_size = 12

    # Figures to plot, leave as empty string to not plot
    [plotting.plots_to_be_made]
    load_measurements = "True"
    load_measurements_histogram = "True"
    temperature_measurements = "True"
    load_measurements_before_and_after_temperature_correction = "True"
    # Specific for Tønne-algorithm
    variation_curves = "True"
    deterministic_model = ""
    load_measurements_and_deterministic_model = "True"
    relative_error = "True"
    relative_error_histogram = "True"
    load_measurements_and_stochastic_model = "True"